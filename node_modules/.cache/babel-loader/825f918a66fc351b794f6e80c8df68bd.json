{"ast":null,"code":"var _jsxFileName = \"/Users/arafatarman/Documents/ReactProjects/minesweeper/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Cell(props) {\n  return React.createElement(\"p\", {\n    className: \"cell\",\n    onClick: props.onClick,\n    onContextMenu: props.onClick,\n    style: {\n      backgroundColor: props.bg_color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.face);\n} //globals, these arrays help us check the neighbors of a cell.\n\n\nvar neighbor_rows = [-1, -1, -1, 0, 0, 1, 1, 1];\nvar neighbor_cols = [-1, 0, 1, -1, 1, -1, 0, 1];\n\nfunction init_board(arr) {\n  var count = 0;\n\n  while (count < 10) {\n    var rand_r = Math.floor(Math.random() * 9);\n    var rand_c = Math.floor(Math.random() * 9);\n\n    while (arr[rand_r][rand_c] === '*') {\n      rand_r = Math.floor(Math.random() * 9);\n      rand_c = Math.floor(Math.random() * 9);\n    }\n\n    arr[rand_r][rand_c] = '*';\n    count++;\n  }\n\n  for (var i = 0; i < 9; i++) {\n    for (var j = 0; j < 9; j++) {\n      if (arr[i][j] !== '*') {\n        var cnt_mines = 0;\n\n        for (var k = 0; k < 9; k++) {\n          var row_to_check = i + neighbor_rows[k];\n          var col_to_check = j + neighbor_cols[k];\n\n          if (row_to_check < 0 || row_to_check > 9 || col_to_check < 0 || col_to_check > 9) {\n            continue;\n          } else {\n            try {\n              if (arr[row_to_check][col_to_check] === '*') {\n                cnt_mines++;\n              }\n            } catch (error) {//some NaN/undefined error we can ignore\n            }\n          }\n        }\n\n        arr[i][j] = cnt_mines;\n      }\n    }\n  }\n\n  return arr;\n}\n\nvar bool_arr = [];\nvar val_arr = [];\nvar flag_arr = [];\nvar val_arr_isInitialized = false;\n\nfor (var i = 0; i < 9; i++) {\n  bool_arr[i] = new Array(9);\n  val_arr[i] = new Array(9);\n  flag_arr[i] = new Array(9);\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    var init = [];\n\n    for (var i = 0; i < 9; i++) {\n      init[i] = new Array(9);\n    }\n\n    init_board(init);\n\n    for (var k = 0; k < 9; k++) {\n      for (var j = 0; j < 9; j++) {\n        var val = init[k][j];\n        init[k][j] = this.renderCell(k, j, val, \"\", \"white\");\n      }\n    }\n\n    this.state = {\n      cells: init,\n      mines: 10,\n      revealed_cells: 0,\n      did_lose: false,\n      did_win: false\n    };\n  }\n\n  reveal(row, col) {\n    if (flag_arr[row][col]) return; //can't reveal a flagged cell.\n    else if (val_arr[row][col] === 0 && !bool_arr[row][col]) {\n        bool_arr[row][col] = true;\n        var neighbor_rows = [-1, -1, -1, 0, 0, 1, 1, 1];\n        var neighbor_cols = [-1, 0, 1, -1, 1, -1, 0, 1];\n\n        for (var i = 0; i < 9; i++) {\n          if (row_to_check < 0 || row_to_check >= 9 || col_to_check < 0 || col_to_check >= 9) continue; //out of bounds\n\n          if (isNaN(row_to_check) || isNaN(col_to_check)) break; //weird error I was getting after a recursive call returned.\n\n          this.reveal(row_to_check, col_to_check);\n        }\n      } else bool_arr[row][col] = true;\n  }\n\n  flag(row, col) {\n    if (!bool_arr[row][col] || flag_arr[row][col]) {\n      flag_arr[row][col] = !flag_arr[row][col];\n      var m = this.state.mines;\n      flag_arr[row][col] ? this.setState({\n        mines: m - 1\n      }) : this.setState({\n        mines: m + 1\n      });\n    }\n  }\n\n  handleClick(row, col, event) {\n    if (this.state.did_lose || this.state.did_win) return;\n    event.preventDefault(); //need this so menu doesn't pop up when we right click\n\n    var cells_copy = [];\n    var rev_cells_cnt = 0;\n\n    for (var i = 0; i < 9; i++) {\n      cells_copy[i] = new Array(9);\n    }\n\n    if (!val_arr_isInitialized) {\n      for (var j = 0; j < 9; j++) {\n        for (var k = 0; k < 9; k++) {\n          this.state.cells[j][k].props.face === \"\" ? bool_arr[j][k] = false : bool_arr[j][k] = true;\n          val_arr[j][k] = this.state.cells[j][k].props.value;\n          flag_arr[j][k] = false;\n        }\n      }\n\n      val_arr_isInitialized = true;\n    }\n\n    if (event.type === 'click') this.reveal(row, col);else this.flag(row, col);\n    var didLose = false;\n\n    for (var r = 0; r < 9; r++) {\n      for (var c = 0; c < 9; c++) {\n        if (bool_arr[r][c]) {\n          if (this.state.cells[r][c].props.value === \"*\") {\n            didLose = true;\n            cells_copy[r][c] = this.renderCell(r, c, this.state.cells[r][c].props.value, this.state.cells[r][c].props.value, \"lightcoral\");\n          } else cells_copy[r][c] = this.renderCell(r, c, this.state.cells[r][c].props.value, this.state.cells[r][c].props.value, \"lightgrey\");\n\n          rev_cells_cnt++;\n        } else if (flag_arr[r][c]) {\n          cells_copy[r][c] = this.renderCell(r, c, this.state.cells[r][c].props.value, \"M\", \"white\");\n          rev_cells_cnt++;\n        } else cells_copy[r][c] = this.renderCell(r, c, this.state.cells[r][c].props.value, \"\", \"white\");\n      }\n    }\n\n    if (rev_cells_cnt === 81) this.setState({\n      cells: cells_copy,\n      revealed_cells: rev_cells_cnt,\n      did_lose: didLose,\n      did_win: true\n    });else this.setState({\n      cells: cells_copy,\n      revealed_cells: rev_cells_cnt,\n      did_lose: didLose\n    });\n  }\n\n  renderCell(r, c, v, f, bgc) {\n    return React.createElement(Cell, {\n      row: r,\n      col: c,\n      value: v,\n      face: f,\n      onClick: event => this.handleClick(r, c, event),\n      bg_color: bgc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    if (this.state.init === null) return null;\n    let status;\n    if (this.state.did_lose) status = \"You Lose!\";else if (this.state.did_win) status = \"You Win!\";else status = \"# of mines: \" + this.state.mines;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, status)), React.createElement(\"div\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, this.state.cells));\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"React.Minesweeper\"), React.createElement(Board, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 245\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/arafatarman/Documents/ReactProjects/minesweeper/src/index.js"],"names":["React","ReactDOM","Cell","props","onClick","backgroundColor","bg_color","face","neighbor_rows","neighbor_cols","init_board","arr","count","rand_r","Math","floor","random","rand_c","i","j","cnt_mines","k","row_to_check","col_to_check","error","bool_arr","val_arr","flag_arr","val_arr_isInitialized","Array","Board","Component","constructor","init","val","renderCell","state","cells","mines","revealed_cells","did_lose","did_win","reveal","row","col","isNaN","flag","m","setState","handleClick","event","preventDefault","cells_copy","rev_cells_cnt","value","type","didLose","r","c","v","f","bgc","render","status","Game","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Cell(props) {\n        return (\n            <p className=\"cell\" onClick={props.onClick} onContextMenu={props.onClick} style={{backgroundColor: props.bg_color}}>\n                {props.face}\n            </p>\n        );\n}\n\n//globals, these arrays help us check the neighbors of a cell.\nvar neighbor_rows = [-1, -1, -1, 0, 0,   1, 1, 1];\nvar neighbor_cols = [-1,  0,  1, -1, 1, -1, 0, 1];\n\nfunction init_board(arr) {\n    var count = 0;\n    while(count < 10)\n    {\n        var rand_r = Math.floor(Math.random() * 9);\n        var rand_c = Math.floor(Math.random() * 9);\n        while(arr[rand_r][rand_c] === '*')\n        {\n            rand_r = Math.floor(Math.random() * 9);\n            rand_c = Math.floor(Math.random() * 9);\n        }\n        arr[rand_r][rand_c] = '*';\n        count++;\n    }\n\n    for(var i = 0; i < 9; i++)\n    {\n        for(var j = 0; j < 9; j++)\n        {\n            if(arr[i][j] !== '*')\n            {\n                var cnt_mines = 0;\n                for(var k = 0; k < 9; k++)\n                {\n                    var row_to_check = i + neighbor_rows[k];\n                    var col_to_check = j + neighbor_cols[k];\n                    if(row_to_check < 0 || row_to_check > 9 || col_to_check < 0 || col_to_check > 9)\n                    {\n                        continue;\n                    }\n                    else\n                    {\n                        try {\n                            if(arr[row_to_check][col_to_check] === '*')\n                                {\n                                    cnt_mines++;\n                                }\n                        } catch (error) {\n                            //some NaN/undefined error we can ignore\n                        }\n                    }\n                }\n                arr[i][j] = cnt_mines;\n            }\n        }\n    }\n    return arr;\n}\n\nvar bool_arr = [];\nvar val_arr = [];\nvar flag_arr = [];\nvar val_arr_isInitialized = false;\n\nfor(var i = 0; i < 9; i++)\n{\n    bool_arr[i] = new Array(9);\n    val_arr[i] = new Array(9);\n    flag_arr[i] = new Array(9);\n}\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n\n        var init = [];\n        for(var i = 0; i < 9; i++)\n        {\n            init[i] = new Array(9);\n        }\n        init_board(init);\n\n        for(var k = 0; k < 9; k++)\n        {\n            for(var j = 0; j < 9; j++)\n            {\n                var val = init[k][j];\n                init[k][j] = this.renderCell(k, j, val, \"\", \"white\");\n            }\n        }\n\n        this.state = {\n            cells: init,\n            mines: 10,\n            revealed_cells: 0,\n            did_lose: false,\n            did_win: false,\n        }\n    }\n\n    reveal(row, col) {\n        if(flag_arr[row][col])\n            return; //can't reveal a flagged cell.\n        else if(val_arr[row][col] === 0 && !bool_arr[row][col])\n        {\n            bool_arr[row][col] = true;\n\n            var neighbor_rows = [-1, -1, -1, 0,  0,  1, 1, 1];\n            var neighbor_cols = [-1,  0,  1, -1, 1, -1, 0, 1];\n\n            for(var i = 0; i < 9; i++)\n            {\n                if(row_to_check < 0 || row_to_check >= 9 || col_to_check < 0 || col_to_check >= 9)\n                    continue; //out of bounds\n\n                if(isNaN(row_to_check) || isNaN(col_to_check))\n                    break; //weird error I was getting after a recursive call returned.\n\n                this.reveal(row_to_check, col_to_check);\n            }\n        }\n        else\n            bool_arr[row][col] = true;\n    }\n\n    flag(row, col) {\n        if(!bool_arr[row][col] || flag_arr[row][col])\n        {\n            flag_arr[row][col] = !flag_arr[row][col];\n            var m = this.state.mines;\n            flag_arr[row][col] ? this.setState({mines: (m - 1)}) : this.setState({mines: (m + 1)});\n        }\n    }\n\n    handleClick(row, col, event) {\n        if(this.state.did_lose || this.state.did_win)\n            return;\n\n        event.preventDefault(); //need this so menu doesn't pop up when we right click\n\n        var cells_copy = [];\n        var rev_cells_cnt = 0;\n        for(var i = 0; i < 9; i++)\n        {\n            cells_copy[i] = new Array(9);\n        }\n\n        if(!val_arr_isInitialized) {\n            for(var j = 0; j < 9; j++)\n            {\n                for(var k = 0; k < 9; k++)\n                {\n                    this.state.cells[j][k].props.face === \"\" ? bool_arr[j][k] = false : bool_arr[j][k] = true;\n                    val_arr[j][k] = this.state.cells[j][k].props.value;\n                    flag_arr[j][k] = false;\n                }\n            }\n            val_arr_isInitialized = true;\n        }\n\n        if(event.type === 'click')\n            this.reveal(row, col);\n        else\n            this.flag(row, col);\n\n        var didLose = false;\n        for(var r = 0; r < 9; r++)\n        {\n            for(var c = 0; c < 9; c++)\n            {\n                if(bool_arr[r][c])\n                {\n                    if(this.state.cells[r][c].props.value === \"*\")\n                    {\n                        didLose = true;\n                        cells_copy[r][c] = this.renderCell(r, c, (this.state.cells[r][c].props.value), (this.state.cells[r][c].props.value), \"lightcoral\");\n                    }\n                    else\n                        cells_copy[r][c] = this.renderCell(r, c, (this.state.cells[r][c].props.value), (this.state.cells[r][c].props.value), \"lightgrey\");\n                    \n                    rev_cells_cnt++;\n                }\n                else if(flag_arr[r][c])\n                {\n                    cells_copy[r][c] = this.renderCell(r, c, (this.state.cells[r][c].props.value), \"M\", \"white\");\n                    rev_cells_cnt++;\n                }\n                else\n                    cells_copy[r][c] = this.renderCell(r, c, (this.state.cells[r][c].props.value), \"\", \"white\");\n            }\n        }\n\n        if(rev_cells_cnt === 81)\n            this.setState({cells: cells_copy, revealed_cells: rev_cells_cnt, did_lose: didLose, did_win: true});\n        else    \n            this.setState({cells: cells_copy, revealed_cells: rev_cells_cnt, did_lose: didLose});    \n    }\n\n    renderCell(r, c, v, f, bgc) {\n        return <Cell row={r} col={c} value={v} face={f} onClick={(event) => this.handleClick(r, c, event)} bg_color={bgc}/>\n    }\n\n    render() {\n        if (this.state.init === null) return null;\n\n        let status;\n        if(this.state.did_lose)\n            status = \"You Lose!\";\n        else if(this.state.did_win)\n            status = \"You Win!\";\n        else\n            status = \"# of mines: \" + this.state.mines;\n            \n        return (\n            <div>\n                <div>\n                    <h3>{status}</h3>\n                </div>\n                <div className=\"grid\">\n                    {this.state.cells}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        return(\n            <div>\n                <h2>React.Minesweeper</h2>\n                <Board />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );"]},"metadata":{},"sourceType":"module"}