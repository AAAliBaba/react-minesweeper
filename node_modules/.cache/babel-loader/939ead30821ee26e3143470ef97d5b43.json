{"ast":null,"code":"var _jsxFileName = \"/Users/arafatarman/Documents/ReactProjects/minesweeper/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Cell extends React.Component {\n  render() {\n    return React.createElement(\"button\", {\n      className: \"cell\",\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, this.props.face);\n  }\n\n}\n\nfunction init_board(arr) {\n  var count = 0;\n\n  while (count < 10) {\n    var rand_r = Math.floor(Math.random() * 9);\n    var rand_c = Math.floor(Math.random() * 9);\n\n    while (arr[rand_r][rand_c] === 'bomb') {\n      rand_r = Math.floor(Math.random() * 9);\n      rand_c = Math.floor(Math.random() * 9);\n    }\n\n    arr[rand_r][rand_c] = 'bomb';\n    count++;\n  }\n\n  var neighbor_rows = [-1, -1, -1, 0, 0, 1, 1, 1];\n  var neighbor_cols = [-1, 0, 1, -1, 1, -1, 0, 1];\n\n  for (var i = 0; i < 9; i++) {\n    for (var j = 0; j < 9; j++) {\n      if (arr[i][j] !== 'bomb') {\n        var cnt_mines = 0;\n\n        for (var k = 0; k < 9; k++) {\n          var row_to_check = i + neighbor_rows[k];\n          var col_to_check = j + neighbor_cols[k];\n\n          if (row_to_check < 0 || row_to_check > 9 || col_to_check < 0 || col_to_check > 9) {\n            continue;\n          } else {\n            try {\n              if (arr[row_to_check][col_to_check] === 'bomb') {\n                cnt_mines++;\n              }\n            } catch (error) {//some NaN/undefined error we can ignore\n            }\n          }\n        }\n\n        arr[i][j] = cnt_mines;\n      }\n    }\n  }\n\n  return arr;\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    var init = [];\n\n    for (var i = 0; i < 9; i++) {\n      init[i] = new Array(9);\n    }\n\n    init_board(init);\n\n    for (var k = 0; k < 9; k++) {\n      for (var j = 0; j < 9; j++) {\n        var val = init[k][j];\n        init[k][j] = React.createElement(Cell, {\n          key: k + 1,\n          row: k,\n          col: j,\n          value: val,\n          face: null,\n          onClick: () => this.handleClick(k + 1, k, j, val),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n      }\n    }\n\n    this.state = {\n      cells: init\n    };\n  }\n\n  handleClick(key, row, col, value) {\n    var revealed_cells = [];\n\n    for (var i = 0; i < 9; i++) {\n      revealed_cells[i] = new Array(9);\n    }\n\n    for (var k = 0; k < 9; k++) {\n      for (var j = 0; j < 9; j++) {\n        if (k === row && j === col) {\n          var test = 1 / 0;\n          var face = value;\n\n          if (face === 'bomb') {\n            face = '*';\n          }\n\n          revealed_cells[k][j] = React.createElement(Cell, {\n            key: key,\n            row: row,\n            col: col,\n            value: value,\n            face: face,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          });\n        } else {\n          revealed_cells[k][j] = this.state.cells[k][j];\n        }\n      }\n    }\n\n    this.setState({\n      cells: revealed_cells\n    });\n  }\n\n  render() {\n    // var init = [];\n    // for(var i = 0; i < 9; i++)\n    // {\n    //     init[i] = new Array(9);\n    // }\n    // init_board(init);\n    // for(var k = 0; k < 9; k++)\n    // {\n    //     for(var j = 0; j < 9; j++)\n    //     {\n    //         var val = init[k][j];\n    //         init[k][j] = <Cell key={k + 1} row={k} col={j} value={val} face={null}/>;\n    //     }\n    // }\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Minesweeper.React\"), React.createElement(\"div\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.state.cells));\n  }\n\n}\n\nReactDOM.render(React.createElement(Board, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/arafatarman/Documents/ReactProjects/minesweeper/src/index.js"],"names":["React","ReactDOM","Cell","Component","render","props","onClick","face","init_board","arr","count","rand_r","Math","floor","random","rand_c","neighbor_rows","neighbor_cols","i","j","cnt_mines","k","row_to_check","col_to_check","error","Board","constructor","init","Array","val","handleClick","state","cells","key","row","col","value","revealed_cells","test","setState","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Cell extends React.Component {\n    render() {\n        return (\n            <button className=\"cell\" onClick={this.props.onClick}>\n                {this.props.face}\n            </button>\n        );\n    }\n}\n\nfunction init_board(arr) {\n    var count = 0;\n    while(count < 10)\n    {\n        var rand_r = Math.floor(Math.random() * 9);\n        var rand_c = Math.floor(Math.random() * 9);\n        while(arr[rand_r][rand_c] === 'bomb')\n        {\n            rand_r = Math.floor(Math.random() * 9);\n            rand_c = Math.floor(Math.random() * 9);\n        }\n        arr[rand_r][rand_c] = 'bomb';\n        count++;\n    }\n\n    var neighbor_rows = [-1, -1, -1, 0, 0,   1, 1, 1];\n    var neighbor_cols = [-1,  0,  1, -1, 1, -1, 0, 1];\n\n    for(var i = 0; i < 9; i++)\n    {\n        for(var j = 0; j < 9; j++)\n        {\n            if(arr[i][j] !== 'bomb')\n            {\n                var cnt_mines = 0;\n                for(var k = 0; k < 9; k++)\n                {\n                    var row_to_check = i + neighbor_rows[k];\n                    var col_to_check = j + neighbor_cols[k];\n                    if(row_to_check < 0 || row_to_check > 9 || col_to_check < 0 || col_to_check > 9)\n                    {\n                        continue;\n                    }\n                    else\n                    {\n                        try {\n                            if(arr[row_to_check][col_to_check] === 'bomb')\n                                {\n                                    cnt_mines++;\n                                }\n                        } catch (error) {\n                            //some NaN/undefined error we can ignore\n                        }\n                    }\n                }\n                arr[i][j] = cnt_mines;\n            }\n        }\n    }\n    return arr;\n}\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n\n        var init = [];\n        for(var i = 0; i < 9; i++)\n        {\n            init[i] = new Array(9);\n        }\n        init_board(init);\n        for(var k = 0; k < 9; k++)\n        {\n            for(var j = 0; j < 9; j++)\n            {\n                var val = init[k][j];\n                init[k][j] = <Cell key={k + 1} row={k} col={j} value={val} face={null} onClick={() => this.handleClick((k + 1), k, j, val)}/>;\n            }\n        }\n\n        this.state = {\n            cells: init,\n        }\n    }\n\n    handleClick(key, row, col, value) {\n\n        var revealed_cells = [];\n        for(var i = 0; i < 9; i++)\n        {\n            revealed_cells[i] = new Array(9);\n        }\n        for(var k = 0; k < 9; k++)\n        {\n            for(var j = 0; j < 9; j++)\n            {\n                if(k === row && j === col)\n                {\n                    var test = 1/0;\n                    var face = value;\n                    if(face === 'bomb')\n                    {\n                        face = '*';\n                    }\n                    revealed_cells[k][j] = <Cell key={key} row={row} col={col} value={value} face={face}/>;\n                }\n                else\n                {\n                    revealed_cells[k][j] = this.state.cells[k][j];\n                }\n            }\n        }\n\n        this.setState({cells: revealed_cells});\n    }\n\n    render() {\n\n        // var init = [];\n        // for(var i = 0; i < 9; i++)\n        // {\n        //     init[i] = new Array(9);\n        // }\n        // init_board(init);\n        // for(var k = 0; k < 9; k++)\n        // {\n        //     for(var j = 0; j < 9; j++)\n        //     {\n        //         var val = init[k][j];\n        //         init[k][j] = <Cell key={k + 1} row={k} col={j} value={val} face={null}/>;\n        //     }\n        // }\n\n        return (\n            <div>\n                <h2>Minesweeper.React</h2>\n                <div className=\"grid\">\n                    {this.state.cells}\n                </div>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <Board />,\n    document.getElementById('root')\n  );"]},"metadata":{},"sourceType":"module"}